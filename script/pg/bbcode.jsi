/** 
 * @filename bbcode.jsi
 * @author Jan Biniok <jan@biniok.net>
 * @author Thomas Rendelmann <thomas@rendelmann.net>
 * @licence GPL v2
*/

var BBCode = new Object();
var BBCodeEditor = new Object();

Registry.register("BBCode", BBCode);
Registry.register("BBCodeEditor", BBCodeEditor);

// ########### BB Code Utils ##############

BBCode.init = function () {

    BBCode.tags = [ // sort this by length!!!
        { bbtag: 'comment', htmltag: 'div', htmlx: ' style="display: none"' },
        { bbtag: 'comment', htmltag: 'form' },
        { bbtag: 'table' },
        { bbtag: 'tbody' },
        { bbtag: 'span' },
        { bbtag: 'pic', htmltag: 'img' },
        { bbtag: 'div' },
        { bbtag: 'th' },
        { bbtag: 'tr' },
        { bbtag: 'td' },
        { bbtag: 'br' },
        { bbtag: 'ul' },
        { bbtag: 'ol' },
        { bbtag: 'li' },
        { bbtag: 'b', htmltag: 'strong' },
        { bbtag: 'b' },
        { bbtag: 'a' },
        { bbtag: 'p' }
        ];

    BBCode.isParent = function(elem, parent) {
        var p = elem.parentNode;
        return p ? (p == parent || BBCode.isParent(p. parent)) : false;
    };
    
    BBCode.findElements = function() {
        var ret = new Array()
        var t = document.getElementsByTagName('p');

        if (!t) return ret;

        for (var i=0; i<t.length; i++) {
            var e = t[i];
            var c = e.getElementsByTagName('p');

            if (!c || (c && c.length)) continue; // find direct parent!

            for (var j=0; j<BBCode.tags.length; j++) {
                if (e.innerHTML.search(BaseLib.escapeForRegExp('\[' + BBCode.tags[j].bbtag)) != -1) {
                    ret.push(e);
                    break;
                }
            }
        }

        return ret;
    };

    BBCode.removeScripts = function(text) {
        text = text.replace(/onmouse/g, 'notallowed');
        text = text.replace(/onkey/g, 'notallowed');
        text = text.replace(/onload/g, 'notallowed');
        text = text.replace(/onunload/g, 'notallowed');
        text = text.replace(/out=/g, 'notallowed=');
        text = text.replace(/over=/g, 'notallowed=');
        return text;
    };
    
    BBCode.decodeTags = function(table) {
        var lt = "&lt;";
        var gt = "&gt;";
        var t = table.textContent.replace(/</g, lt).replace(/>/g, gt).replace(/\&amp\;nbsp\;/g, "&nbsp;");
        for (var j=0; j<BBCode.tags.length; j++) {
            t = BBCode.replaceTag(t, BBCode.tags[j], "[", "]" ,"<", ">", false);
        }
        table.innerHTML = BBCode.removeScripts(t);
    };

    BBCode.encodeTags = function(text) {
        var t = text;
        for (var j=0; j<BBCode.tags.length; j++) {
            t = BBCode.replaceTag(t, BBCode.tags[j], "<", ">", "[", "]", true);
        }
        t = t.replace(/\t/g,' ');
        t = t.replace(/\s\s/g,' ');
        t = t.replace(/\)/g, '&#041;'); // avoid bb code smilies :(
        return t;
    };

    BBCode.replaceTag = function(text, elem, t1, t12, t2, t22, encode) {
        if (elem.htmltag == undefined) elem.htmltag = elem.bbtag;
        if (elem.htmlx == undefined) elem.htmlx = '';

        var find = encode ? elem.htmltag + elem.htmlx : elem.bbtag;
        var rep =  encode ? elem.bbtag : elem.htmltag + elem.htmlx;
        
        var s = text.split(t1 + find);
        var f = t1 + "/" + find + t12;
        var v = t2 + "/" + rep + t22;
        var re = new RegExp(BaseLib.escapeForRegExp(f), 'g');

        for (var i=1; i<s.length; i++) {
            var e = s[i];
            e = e.replace(t12, t22); // once for end of start tag
            e = e.replace(re, v);
            s[i] = e;
        }
        var j = t2 + rep + ' ';
        return s.join(j);
    };
    
    BBCode.run = function() {
        var t = BBCode.findElements();
        for (var i=0; i<t.length; i++) {
            BBCode.decodeTags(t[i]);
        }
    };

    BBCode.getHint = function() {
        var hint = '[comment][b]\n';
        hint += 'Wenn dieser Text seltsam aussieht, dann musst du folgendes tun:\n';
        hint += ' installiere dir [url=https://addons.mozilla.org/de/firefox/addon/748/]Greasemonkey[/url] wenn du Firefox nutzt\n';
        hint += ' oder [url=https://chrome.google.com/extensions/detail/dhdgffkkebhmkfjojejmpbldmpobfkfo]Tampermonkey[/url] wenn du Chrome nutzt.\n';
        hint += 'Dann hole dir dieses [url=' + UrlHandler.bbcodeUserscriptUrl + ']Userscript[/url] und [u]alles[/u] wird gut! ;)\n';
        hint += '[/b][/comment]';
        return hint;
    };

    BBCode.createBbCodeButtons = function(format, id, txt) {
        var span = document.createElement('span');
        span.setAttribute('class', 'tiername');

        var b1 = document.createElement("input");
        span.appendChild(b1);
        b1.type = 'button';
        b1.value = 'BB Code' + (txt ? ' ('+txt+')' : '');

        span.appendChild(document.createTextNode(' '));

        var b2 = document.createElement("input");
        span.appendChild(b2);
        b2.type = 'button';
        b2.value = 'BB Code' + (txt ? ' ('+txt+')' : '') + ' -> Kopieren';

        span.appendChild(document.createTextNode(' '));
        var statusElem = document.createElement("span");
        span.appendChild(statusElem);

        var f1 = function() {
            var dou = UIHelpers.createOverlay(id);
            dou.innerPanel.textContent = format();
            var t = dou.innerPanel.innerHTML.replace(/&lt;br&gt;/g, '<br>');
            dou.innerPanel.innerHTML = t;
        };

        var f2 = function() {
            BaseLib.copyToClipboard(format().replace(/<br>/g, '\n'));
            statusElem.innerHTML = 'ok';
        };

        b1.addEventListener('click', f1, true );
        b2.addEventListener('click', f2, true );

        return span;
    };

    BBCode.onRunlevel = function(runlevel) {
        if (runlevel == 55) {
            if (UrlHandler.isBBCodeUrl() && !UrlHandler.isPostEditUrl()) {
                BBCode.run();
            }
        }
    };

};


// ########### BB Code Editor ##############

BBCodeEditor.init = function () {

    BBCodeEditor.createEditor = function() {
        var ta = document.getElementsByTagName('textarea');
        for (var i = 0; i < ta.length; i++) {
            BBCodeEditor.createForTextarea(ta[i]);
        }
    };

    BBCodeEditor.createForTextarea = function(ta) {
        // first, fix any b0rken HTML by the pennergame spacken
        if (!BaseLib.getParentByTagName("form", ta)) {
            // find the strange element
            var table = BaseLib.getParentByTagName("table", ta);
            if (!table) {GM_log("keine table"); return;}
            var forms = table.getElementsByTagName("form");
            if (!forms || forms.length != 1) {GM_log("keine forms"); return;}
            var f = forms[0];
            var inputs = f.getElementsByTagName('input');
            if (inputs.length != 1) return;
            var i = inputs[0];

            // remove the broken form and add the input field instead
            f.removeChild(i);
            f.parentNode.insertBefore(i, f);
            f.parentNode.removeChild(f);

            // move the whole table into the form
            table.parentNode.insertBefore(f, table);
            table.parentNode.removeChild(table);
            f.appendChild(table);
        }

        // remove old BB Code editor buttons
        var elems = BaseLib.getChildsByTagName('input', ta.parentNode);
        for (var i = 0; i < elems.length; i++) {
            if (elems[i].getAttribute('type') == 'button' && elems[i].getAttribute('id').substr(0, 2) == 'b_') {
                elems[i].parentNode.removeChild(elems[i]);
            }
        }

        elems = BaseLib.getChildsByTagName('br', ta.parentNode);
        for (var i = 0; i < elems.length; i++) {
            elems[i].parentNode.removeChild(elems[i]);
        }

        elems = BaseLib.getChildsByTagName('a', ta.parentNode);
        for (var i = 0; i < elems.length; i++) {
            if (elems[i].getAttribute('href').search('/help/bbcode') != -1) {
                elems[i].parentNode.insertBefore(document.createElement('br'), elems[i].nextSibling);
            }
        }

        // create a big table
        var t = document.createElement('table');
        t.setAttribute('style', 'width: 100%;');
        ta.parentNode.insertBefore(t, ta.nextSibling);

        // insert textarea into the table
        var tr = document.createElement('tr');
        t.appendChild(tr);
        var td = document.createElement('td');
        tr.appendChild(td);
        ta.parentNode.removeChild(ta);
        td.appendChild(ta);
        ta.removeAttribute('cols');
        ta.style.width = '95%';

        // create BB Code Editor
        tr = document.createElement('tr');
        t.appendChild(tr);
        td = document.createElement('td');
        tr.appendChild(td);
        BBCodeEditor.createEditorForTextarea(ta, td);

        // Create Smilies box
        tr = document.createElement('tr');
        t.appendChild(tr);
        td = document.createElement('td');
        tr.appendChild(td);
        BBCodeEditor.createSmiliesForTextarea(ta, td);
    };

    // BB Editor stuff
    BBCodeEditor.createEditorForTextarea = function(ta, parent) {
        var d = document.createElement('div');
        parent.appendChild(d);
        d.setAttribute('style', 'border: 1px solid black; text-align: center; width: 100%;');

        var switchDiv = document.createElement('div');
        var controlsDiv = document.createElement('div');

        d.appendChild(switchDiv);
        switchDiv.innerHTML = 'BB Code Editor';

        d.appendChild(controlsDiv);

        // fill the editor with life ;-)
        var createCol = function(colspan) {
            if (!colspan) colspan = 1;
            var td = document.createElement('td');
            td.setAttribute('colspan', colspan);
            td.setAttribute('style', 'width: '+(colspan*25)+'px;');
            return td;
        };
        var createButton = function(colspan, text, style, fn) {
            var td = createCol(colspan);
            var b = document.createElement('input');
            b.setAttribute('type', 'button');
            b.setAttribute('value', text);
            if (!style) style = '';
            b.setAttribute('style', style + 'width: 100%; text-align: center;');
            b.addEventListener('click', fn, true);
            td.appendChild(b);
            return td;
        };
        var createColorButton = function(c) {
            return createButton(1, ' ', 'background-color: '+c+';', function() { BBCodeEditor.insertDualTag(ta, '[color='+c+']', '[/color]'); });
        };

        var ctr = document.createElement('center');
        var t = document.createElement('table');
        //t.setAttribute('style', 'width: 100%;');
        controlsDiv.appendChild(ctr);
        ctr.appendChild(t);

        var tr = document.createElement('tr');
        t.appendChild(tr);
        tr.appendChild(createButton(1, 'b', 'font-weight: bold;', function() { BBCodeEditor.insertDualTag(ta, '[b]', '[/b]'); }));
        tr.appendChild(createButton(1, 'i', 'font-style: italic;', function() { BBCodeEditor.insertDualTag(ta, '[i]', '[/i]'); }));
        tr.appendChild(createButton(1, 'u', 'text-decoration: underline;', function() { BBCodeEditor.insertDualTag(ta, '[u]', '[/u]'); }));
        tr.appendChild(createColorButton('red'));
        tr.appendChild(createColorButton('green'));
        tr.appendChild(createColorButton('yellow'));
        tr.appendChild(createColorButton('blue'));
        tr.appendChild(createColorButton('orange'));
        tr.appendChild(createColorButton('lime'));
        tr.appendChild(createColorButton('brown'));
        tr.appendChild(createColorButton('cyan'));
        tr.appendChild(createColorButton('magenta'));
        tr.appendChild(createColorButton('olive'));
        tr.appendChild(createColorButton('gray'));
        tr.appendChild(createColorButton('silver'));

        tr = document.createElement('tr');
        t.appendChild(tr);
        tr.appendChild(createButton(3, 'Klein', '', function() { BBCodeEditor.insertDualTag(ta, '[small]', '[/small]'); }));
        tr.appendChild(createButton(3, 'Gross', '', function() { BBCodeEditor.insertDualTag(ta, '[big]', '[/big]'); }));
        tr.appendChild(createButton(3, 'Zitat', '', function() { BBCodeEditor.insertDualTag(ta, '[quote]', '[/quote]'); }));
        tr.appendChild(createButton(3, 'Laufschrift', '', function() { BBCodeEditor.insertDualTag(ta, '[marquee]', '[/marquee]'); }));
        tr.appendChild(createButton(3, 'Zentrieren', '', function() { BBCodeEditor.insertDualTag(ta, '[center]', '[/center]'); }));

        tr = document.createElement('tr');
        t.appendChild(tr);
        tr.appendChild(createButton(3, 'Bild', '', function() { BBCodeEditor.insertImageInteractive(ta); }));
        tr.appendChild(createButton(3, 'Link', '', function() { BBCodeEditor.insertLinkInteractive(ta); }));
        tr.appendChild(createButton(3, 'Liste (*)', '', function() { BBCodeEditor.insertListTag(ta, '[list]', '[/list]', '[*]', ''); }));

        if (Config.bbcode) {
            tr.appendChild(createButton(3, 'Liste (123)', '', function() { BBCodeEditor.insertListTag(ta, '[ol]', '[/ol]', '[li]', '[/li]', true); }));
            tr.appendChild(createButton(3, 'Tabelle', '', function() { BBCodeEditor.insertDualTag(ta, '[table][tr][td]','[/td][/tr][/table]', null, true); }));
        }

        tr = document.createElement('tr');
        t.appendChild(tr);
        var btn = createButton(9, 'Vergrößere Editor', '', function() { ta.style.height = "300px"; btn.parentNode.removeChild(btn); })
        tr.appendChild(createCol(3));
        tr.appendChild(btn);
        tr.appendChild(createCol(3));

        tr = document.createElement('tr');
        t.appendChild(tr);
        var td = document.createElement('td');
        td.innerHTML = '&nbsp;';
        tr.appendChild(td);
    };

    // Smilie stuff
    BBCodeEditor.createSmiliesForTextarea = function(ta, parent) {
        var d = document.createElement('div');
        parent.appendChild(d);
        d.setAttribute('style', 'border: 1px solid black; text-align: center; width: 100%;');

        var switchDiv = document.createElement('div');
        var smilieDiv = document.createElement('div');

        d.appendChild(switchDiv);
        var a = document.createElement('a');
        a.innerHTML = 'Smilies';
        a.setAttribute('href', UrlHandler.nop);
        a.setAttribute('style', 'text-decoration: none;');
        switchDiv.appendChild(a);

        d.appendChild(smilieDiv);

        var oobj = new Object();
        oobj.textarea = ta;
        oobj.div = smilieDiv;
        oobj.a = a;

        a.isShown = false;
        a.switchShown = function() {
            a.setShown(!a.isShown);
        };
        a.setShown = function(isShown) {
            a.isShown = isShown;
            if (isShown) {
                a.innerHTML = 'Smilies <<<';
                smilieDiv.setAttribute('style', 'display: block');
            } else {
                a.innerHTML = 'Smilies >>>';
                smilieDiv.setAttribute('style', 'display: none');
            }
        };
        a.addEventListener('click', function() { a.switchShown(); }, true);
        a.setShown(false);

        BaseLib.xmlhttpRequest(UrlHandler.biniok + 'smilies/smilies.php?listv2=1', BBCodeEditor.insertSmilies, true, 24*60*60, oobj);
    };

    BBCodeEditor.insertSmilies = function(req, oobj) {
        if (req.readyState == 4 && req.status == 200) {
            var r = JSON.parse(req.responseText);
            for (var i = 0; i < r.images.length; i++) {
                BBCodeEditor.insertSmiley(r.images[i], oobj);
            }
        };
    };

    BBCodeEditor.insertSmiley = function(imgName, oobj) {
        var a = document.createElement('a');
        a.setAttribute('href', UrlHandler.nop);

        var imgUrl;
        if (imgName.search('http') == 0) {
            imgUrl = imgName;
            var imgParts = imgName.split('/');
            imgName = imgParts[imgParts.length - 1];
        } else {
            imgUrl = UrlHandler.biniok + 'smilies/smilies.php?image=' + imgName;
        }

        var clk1 = function() {
            BBCodeEditor.putSmilie(imgUrl, oobj.textarea);
            a.removeEventListener('click', clk1, true);
            a.addEventListener('click', clk2, true);
            BaseLib.setTimeoutEx(function () {
                a.removeEventListener('click', clk2, true);
                a.addEventListener('click', clk1, true);
            },  200);
        };
        var clk2 = function() {
            oobj.a.setShown(false);
        };

        a.addEventListener('click', clk1, true);

        var img = document.createElement('img');
        img.setAttribute('src', imgUrl);
        img.setAttribute('style', 'margin: 4px;');

        var alt = imgName.replace('smiley_emoticons_', '').replace('.gif', '');
        img.setAttribute('alt', alt);
        img.setAttribute('title', alt);

        img.out = function() {
            img.setAttribute('style', 'margin: 4px;');
        };
        img.over = function() {
            img.setAttribute('style', 'margin: 3px; border: 1px solid grey;');
        };
        img.addEventListener('mouseout', img.out, true);
        img.addEventListener('mouseover', img.over, true);

        a.appendChild(img);
        oobj.div.appendChild(a);
    };

    BBCodeEditor.putSmilie = function(imgUrl, elem) {
        var tag = '[img]' + imgUrl + '[/img]';
        BBCodeEditor.insertSingleTag(elem, tag);
    };

    // general stuff
    BBCodeEditor.insertHint = function(elem) {
        var hint = BBCode.getHint();
        if (elem.value.search(BaseLib.escapeForRegExp(hint.split("\n")[1])) == -1) {
            elem.value = hint + elem.value;
        }
    };

    BBCodeEditor.insertImageInteractive = function(elem) {
        var url = prompt('Bild-Url eingeben:', 'http://'); 
        if (url) {
            BBCodeEditor.insertSingleTag(elem, '[img]'+url+'[/img]');
        }
    };

    BBCodeEditor.insertLinkInteractive = function(elem) {
        var url = prompt('URL eingeben:', 'http://');
        if (url) {
            BBCodeEditor.insertDualTag(elem, '[url]', '[/url]', url);
        }
    };

    BBCodeEditor.insertSingleTag = function(elem, tag, isAdvanced) {
        if (typeof elem.selectionStart != 'undefined' && elem.selectionStart != undefined) {
            var p = elem.selectionStart;
            var t1 = elem.value.substr(0, p);
            var t2 = elem.value.substr(p);
            elem.value = t1 + tag + t2;
        } else {
            elem.value += tag;
        }

        if (isAdvanced) {
            BBCodeEditor.insertHint(elem);
        }
    };

    BBCodeEditor.insertDualTag = function (elem, tag1, tag2, attrib, isAdvanced){
        if (document.selection){
            elem.focus();
            var sel = document.selection.createRange();
            if (attrib) {
                if(sel.text == '') {
                    sel.text = tag1+attrib+tag2;
                } else {
                    sel.text = tag1.replace(/]$/, '='+attrib+']')+sel.text+tag2;
                }
            } else {
                sel.text = tag1+sel.text+tag2;
            }
        } else {
            var len = elem.value.length;
            var start = elem.selectionStart;
            var end = elem.selectionEnd;
            var scrollTop = elem.scrollTop;
            var scrollLeft = elem.scrollLeft;
            var sel = elem.value.substring(start, end);
            var rep;
            if (attrib) {
                if (sel == '') {
                    rep = tag1+attrib+tag2;
                } else {
                    rep = tag1.replace(/]$/, '='+attrib+']')+sel+tag2;
                }
            } else {
                rep = tag1 + sel + tag2;
            }
            elem.value = elem.value.substring(0, start) + rep + elem.value.substring(end, len);
            elem.scrollTop = scrollTop;
            elem.scrollLeft = scrollLeft;
        }

        if (isAdvanced) {
            BBCodeEditor.insertHint(elem);
        }
    };

    BBCodeEditor.insertListTag = function(elem, tagOuter1, tagOuter2, tagInner1, tagInner2, isAdvanced) {
        if (document.selection) {
            elem.focus();
            var sel = document.selection.createRange();
            var list = sel.text.split('\n');
            for(i = 0; i < list.length; i++){
                list[i] = tagInner1 + list[i] + tagInner2;
            }
            sel.text = tagOuter1 + '\n' + list.join("\n") + '\n' + tagOuter2;
        } else{
            var len = elem.value.length;
            var start = elem.selectionStart;
            var end = elem.selectionEnd;
            var i;
            var scrollTop = elem.scrollTop;
            var scrollLeft = elem.scrollLeft;
            var sel = elem.value.substring(start, end);
            var list = sel.split('\n');
            for(i = 0; i < list.length; i++){
                list[i] = tagInner1 + list[i] + tagInner2;
            }
            var rep = tagOuter1 + '\n' + list.join("\n") + '\n' + tagOuter2;
            elem.value = elem.value.substring(0, start) + rep + elem.value.substring(end, len);
            elem.scrollTop = scrollTop;
            elem.scrollLeft = scrollLeft;
        }

        if (isAdvanced) {
            BBCodeEditor.insertHint(elem);
        }
    };

    BBCodeEditor.smilies = {
        'icon_smile.gif':   'http://www.greensmilies.com/smile/smiley_emoticons_smilenew.gif',  // :)
        'icon_frown.gif':   'http://www.greensmilies.com/smile/smiley_emoticons_sad.gif',       // :(
        'icon_wink.gif':    'http://www.greensmilies.com/smile/smiley_emoticons_wink2.gif',     // ;)
        'icon_biggrin.gif': 'http://www.greensmilies.com/smile/smiley_emoticons_biggrin.gif',   // :D
        'icon_razz.gif':    'http://www.greensmilies.com/smile/smiley_emoticons_seb_zunge.gif', // :P
        'icon_lol.gif':     'http://www.greensmilies.com/smile/smiley_emoticons_jumpgrin.gif',  // *lol*
    };

    BBCodeEditor.replaceSmilies = function() {
        var images = document.getElementsByTagName('img');
        for (var i = 0; i < images.length; i++) {
            var img = images[i];
            var src = img.getAttribute('src');
            for (var s in BBCodeEditor.smilies) {
                if (src == UrlHandler.smiliesUrl + s) {
                    img.setAttribute('src', BBCodeEditor.smilies[s]);
                }
            }
        }
    };

    BBCodeEditor.onRunlevel = function(runlevel) {
        if (runlevel == 60) {
            BBCodeEditor.createEditor();
            BBCodeEditor.replaceSmilies();
        }
    };

};
